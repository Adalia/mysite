from django.shortcuts import get_object_or_404, render
from django.http import HttpResponseRedirect
from django.urls import reverse
from django.views import generic
from django.db.models import F

from .models import Choice, Question


class IndexView(generic.ListView):
    template_name = 'polls/index.html'  # tell Django to use a specific template name instead of the autogenerated default template name(<app name>/<model name>_detail.html)
    context_object_name = 'latest_question_list' # Tell Django to use the variable you want insteal of  generated context variable(question_list)

    def get_queryset(self):
        return Question.objects.order_by('-pub_date')[:6]


class DetailView(generic.DetailView):
    model = Question
    template_name = 'polls/detail.html'


class ResultsView(generic.DetailView):
    model = Question
    template_name = 'polls/results.html'


def vote(request, question_id):
    question = get_object_or_404(Question, pk=question_id)
    try:
        selected_choice = question.choice_set.get(pk=request.POST['choice'])
    except (KeyError, Choice.DoesNotExist):
        return render(request, 'polls/detail.html', {'question':question, 'error_message':"You didn't select a choice.",})
    else:
        selected_choice.votes = F('votes')+1  # 防止两个人同时投票出现数据冲突
        selected_choice.save()
        selected_choice = question.choice_set.get(pk=request.POST['choice'])
        return HttpResponseRedirect(reverse('polls:results', args=(question.id,)))

